<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="carcassonne" default="main" basedir=".">

    <property name="src.dir" location="${basedir}/src"/>
    <property name="lib.dir" location="${basedir}/lib"/>
    <property name="resources.dir" value="ui/resources"/>
    
    <property name="build.dir" location="${basedir}/build"/>
    
    <property name="bin.dir" location="${build.dir}/bin"/>
    <property name="docs.dir" location="${build.dir}/docs"/>
    <property name="dist.dir" location="${build.dir}/dist"/>

    <property name="emma.instr.dir" location="${build.dir}/instr"/>
    <property name="emma.report.dir" location="${build.dir}/report/emma"/>
    <property name="junit.report.dir" location="${build.dir}/report/junit"/>
    
    <property name="main.class" value="model.Main"/>
        
    <path id="junit.lib.path">
        <fileset dir="${lib.dir}"><include name="junit/*.jar"/></fileset>
    </path>

    <path id="emma.lib.path">
        <fileset dir="${lib.dir}"><include name="emma/*.jar"/></fileset>
    </path>
    
    <taskdef resource="emma_ant.properties" classpathref="emma.lib.path"/>

    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${build.dir}/" includes="**"/>
            <fileset dir="." includes="*log*" casesensitive="no"/>
        </delete>
        <mkdir dir="${bin.dir}"/>
        <mkdir dir="${docs.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${emma.instr.dir}"/>
        <mkdir dir="${emma.report.dir}"/>
        <mkdir dir="${junit.report.dir}"/>
    </target>

    <target name="compile" depends="clean">
        <javac srcdir="${src.dir}" destdir="${bin.dir}" includeantruntime="false"
        	debug="true">
            <classpath>
                <pathelement location="${bin.dir}"/>
                <path refid="junit.lib.path"/>
            </classpath>
        </javac>
    </target>

    <target name="junit" depends="compile">
        
        <!-- Instrument the class files (emma) -->
        <emma>
            <instr instrpath="${bin.dir}" destdir="${emma.instr.dir}" mode="copy"
                metadatafile="${emma.report.dir}/metadata.emma" merge="true">
                <filter excludes="*Test*"/>
            </instr>
        </emma>

        <!-- Run Junit tests -->
        <junit printsummary="on" fork="true" forkmode="once">
            
            <classpath>
                <path refid="junit.lib.path"/>
            	<path refid="emma.lib.path"/>
                <pathelement location="${emma.instr.dir}"/>
                <!-- Add uninstrumented classes, for the junit test classes. -->
                <pathelement location="${bin.dir}"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="${junit.report.dir}">
                <fileset dir="${src.dir}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            
            <jvmarg value="-Demma.coverage.out.file=${emma.report.dir}/coverage.emma"/>
            <jvmarg value="-Demma.coverage.out.merge=true"/>
        	<jvmarg value="-XX:-UseSplitVerifier"/>
            
        </junit>
        
        <!-- Get the emma report -->
        <emma>
            <report sourcepath="${src.dir}" depth="method">
                 <fileset dir="${emma.report.dir}">
                     <include name="*.emma"/>
                 </fileset>
                 <xml outfile="${emma.report.dir}/coverage.xml"/>
            </report>
        </emma>
        
    </target>

    <target name="docs" depends="clean">
        <javadoc sourcepath="${src.dir}" destdir="${docs.dir}">
            <excludepackage name="*.tests"/>
        </javadoc>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${bin.dir}"
        	excludes="**/tests/**">
            <fileset dir="${src.dir}" includes="${resources.dir}/**"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <target name="build" depends="clean, compile"/>
    <target name="main" depends="clean, compile, junit, jar"/>
    <target name="all" depends="clean, compile, junit, docs, jar"/>

</project>
